# APP

# Cargar el paquete Shiny
library(shiny)
library(shinydashboard)

ui <-dashboardPage(
  
  # 1. Cabecera el dashboard
  dashboardHeader(
    
    title = 'MetUNALM',
    titleWidth = 150,   #tamanho de la casilla del titulo
  
    # 1.x Menu de notificaciones
    dropdownMenu(type = 'notifications',
	  
      notificationItem(
        
        text = 'Alertas del G16',
        icon = icon('exclamation-triangle'),
        status = 'warning',
        
      )
      
    )
    
  ),
  
  # 2. Menu lateral / Sidebar content
  dashboardSidebar(
    
    width = 150,
    
    # 2.x similar to tabPanels
    sidebarMenu(
      
      # headers y sus imagenes
      menuItem('Nowcast', tabName = 'nowcast', icon = icon('dashboard')),
      menuItem('Analisis', tabName = 'analisis', icon = icon('th')),
      menuItem('Sinoptica', tabName = 'sinoptica', icon = icon('cloud')),
      menuItem('Reporte', tabName = 'doreporte', icon = icon('file')),
      menuItem('Pronostico', tabName = 'pronos', icon = icon('list-alt')),
      menuItem('Links', tabName = 'links' , icon = icon('fab fa-chrome')),
      menuItem('Directivas', tabName = 'directivas', icon = icon('fas fa-book')),
      menuItem('Glosario', tabName = 'glosario', icon = icon('book open'))
      
    )
    
  ),
  
  # 3. Cuerpo del dashboard
  dashboardBody(
    
    # tabs 
    tabItems(
      
      ####################################################
      # Sección Nowcast del menú lateral
      tabItem(tabName = 'nowcast', #),
              
              # Boxes need to be put in a row (or column)
              fluidRow(
                  #Imagen GOES 16
                  column(width = 8,

                         box(width = NULL,

                             uiOutput('imgUI')

                         )

                  ),
              ) #no coma 
      )# no coma
      
              
              # fluidRow(
              #   
              #   #Imagen GOES 16
              #   column(width = 8,
              #          
              #          box(width = NULL,
              #              
              #              uiOutput('imgUI')
              #              
              #          ) 
              #          
              #   ),
              #   
              #   #Parámetros de selección de imagen
              #   column(width = 4,
              #          
              #          box(width = NULL,
              #              
              #              radioButtons('loop', label = 'Animación',
              #                           choices = list('Si' = 'B', 'No' = 'c'),
              #                           selected = 'c'
              #              )
              #              
              #          ),
              #          
              #          box(width = NULL,
              #              
              #              radioButtons('banda1', label = 'Selección de bandas', 
              #                           choices = list('Banda 02' = '02', 'Banda 07' = '07', 'Banda 08' = '08',
              #                                          'Banda 09' = '09', 'Banda 13' = 13, 'Banda 14' = 14, 
              #                                          'Banda 15' = 15, 'Autoestimador'=18),
              #                           selected = '02'
              #              )
              #              
              #          ),
              #          
              #          box(width = NULL,
              #              
              #              sliderInput('numima', label = 'Número de imagen', 
              #                          min = 1, max = 10, value = 10 )
              #          ),
              #          
              #          valueBoxOutput("relojillo",width=4),
              #          valueBoxOutput("reloj_utc",width=4)
              #          
              #   )
              #   
              # )
              
      #),
      
      # ####################################################
      # #Sección de analisis de imágenes
      # tabItem(tabName = 'analisis',
      #         
      #         fluidRow(
      #           
      #           #Gráfica Leaflet
      #           box(width = 8,
      #               
      #               leafletOutput('g16', height = 700)
      #               
      #           ),
      #           
      #           #Parámetros de selección de imágenes
      #           box(title = 'Selección de imagen', width = 2, heigth = 800,
      #               
      #               radioButtons('banda2', label = 'Bandas', 
      #                            choices = list('Banda 02' = '02', 'Banda 07' = '07', 
      #                                           'Banda 08' = '08', 'Banda 09' = '09', 'Banda 13' = '13', 
      #                                           'Banda 14' = '14', 'Banda 15' = '15'),
      #                            selected = '13'
      #               )
      #               
      #           ),
      #           
      #           box(width=4, 
      #               
      #               sliderInput("shingeky",label='Opacidad de la Imagen',
      #                           min = 0.0, max = 1.0, value = 1.0
      #               )
      #               
      #           )
      #           
      #         )
      #         
      
      ),

  ),
  
) 

server <- function(input, output,session){
  
  options(stringsAsFactors = FALSE)
  
  #####################################################################
  #NOWCAST
  
  #UI con link de la dinámico para abrir la imgen del G16
  output$imgUI <- renderUI({
    
    # lista1 <- list.files('www/G16/', pattern = paste0(input$loop,input$banda1))
    # 
    # link <- ifelse(input$loop == 'c', lista1[input$numima], lista1)
    # 
    # tags$a(
    #   imageOutput('img', height = '825px'), 
    #   href = paste0('G16/', link),
    #   target = '_blank'
    # )
    
  })
  
}

# Construir y ejecutar la app creada
shinyApp(ui, server)

# ruta_x <- "C:/Users/Usuario/Desktop/OpenCloud-master/www/G16"